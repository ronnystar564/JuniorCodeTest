@page "/"
@using JuniorCodeTest.Models

<PageTitle>Random Users List</PageTitle>

<div class="title-box">
    <h1>Random Users List</h1>
</div>

<div class="search-container">
    <input type="text" id="searchInput" placeholder="Search by name..." />
    <button id="searchButton" class="btn btn-primary">Search</button>
</div>

<p class="subtitle">Please Find Below A List Of Random Users</p>

@if (RandomUsers.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Sr No.</th>
                    <th scope="col">Title</th>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Age</th>
                    <th scope="col">Country</th>
                    <th scope="col">Latitude</th>
                    <th scope="col">Longitude</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                @for (int i = 0; i < RandomUsers.Count && i < 5; i++)
                {
                    <tr>
                        <td>@(i + 1)</td>
                        <td>@RandomUsers[i].Title</td>
                        <td>@RandomUsers[i].First</td>
                        <td>@RandomUsers[i].Last</td>
                        <td>@RandomUsers[i].Age</td>
                        <td>@RandomUsers[i].Country</td>
                        <td>@RandomUsers[i].Latitude</td>
                        <td>@RandomUsers[i].Longitude</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<div class="refresh-container">
    <button id="refreshButton" class="btn btn-success">Refresh</button>
    <p class="refresh-text">Click The Refresh Button To Reload The Page</p>
</div>

<style>
    body {
        font-family: Calibri, Arial, sans-serif;
        background-color: #f2f2f2;
    }

    .title-box {
        background-color: #2196F3;
        color: white;
        padding: 10px;
        margin-bottom: 20px;
    }

    .subtitle {
        font-size: 18px;
        font-weight: bold;
        font-family: Calibri;
    }

    .table-container {
        max-height: 220px;
        overflow-y: auto;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .table th {
            background-color: #2196F3;
            color: white;
        }

    .refresh-container {
        text-align: center;
        margin-top: 20px;
    }

    .refresh-text {
        margin-top: 10px;
    }

    #refreshButton {
        font-family: Calibri, Arial, sans-serif;
    }

    .search-container {
        margin-bottom: 20px;
        text-align: center;
    }

    #searchInput {
        padding: 8px;
        margin-right: 10px;
    }

    #searchButton {
        padding: 8px 16px;
    }
</style>

<script>
    document.getElementById("refreshButton").addEventListener("click", function () {
        location.reload();
    });

    document.getElementById("searchButton").addEventListener("click", function () {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("userTableBody");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2]; // Index 2 corresponds to the First Name column
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    });
</script>
